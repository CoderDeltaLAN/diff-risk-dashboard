name: release
on:
  push:
    tags: ['v*']        # SOLO tags v*
  workflow_dispatch:    # manual: no publica PyPI si no hay token
permissions:
  contents: write
  packages: write

jobs:
  build-publish:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.12' }
      - name: Build sdist/wheel
        run: |
          python -m pip install -U pip build
          python -m build
      - uses: actions/upload-artifact@v4
        with: { name: dist, path: dist/* }
      - name: Publish to PyPI (guarded)
        if: startsWith(github.ref, 'refs/tags/v') && secrets.PYPI_API_TOKEN != ''
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

  publish-ghcr:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build-publish
    runs-on: ubuntu-latest
    permissions: { contents: read, packages: write }
    env:
      DOCKER_BUILDKIT: "1"
    steps:
      - uses: actions/checkout@v4
      - name: Compute image name (lowercase)
        shell: bash
        run: echo "IMAGE=ghcr.io/${GITHUB_REPOSITORY@L}" >> "$GITHUB_ENV"
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          provenance: false
          tags: ${{ env.IMAGE }}:latest,${{ env.IMAGE }}:${{ github.ref_name }}

name: CI / build

on:
  pull_request:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: build (${{ matrix.python }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python: ["3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install Poetry
        run: pip install poetry

      - name: Install dependencies
        run: poetry install --with dev --no-interaction

      - name: Ruff
        run: poetry run ruff check .

      - name: Black (check)
        run: poetry run black --check .

      - name: Pytest
        run: PYTHONPATH=src poetry run pytest -q

      - name: Mypy
        run: poetry run mypy src

      - name: Generate sample report
        run: |
          mkdir -p examples
          [[ -f examples/sample_apv.json ]] || printf '{"findings":[]}\n' > examples/sample_apv.json
          poetry run diff-risk examples/sample_apv.json -f md -o report.md

      - name: Upload sample report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: sample-report
          path: |
            report.md
          if-no-files-found: ignore

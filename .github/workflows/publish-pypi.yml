name: publish-pypi

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag a publicar (por defecto: Ãºltimo v*)"
        required: false
  workflow_run:
    workflows: ["semantic-release"]
    types: [completed]

permissions:
  id-token: write
  contents: read
  packages: write
  attestations: write

jobs:
  publish:
    if: github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success'
    environment: pypi
    runs-on: ubuntu-latest
    steps:
      - name: Checkout con tags
        uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Resolver TAG
        id: tag
        shell: bash
        run: |
          if [[ -n "${{ github.event.inputs.tag }}" ]]; then
            TAG="${{ github.event.inputs.tag }}"
          elif [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            TAG="${GITHUB_REF#refs/tags/}"
          else
            TAG="$(git tag -l 'v*' --sort=-v:refname | head -n1)"
          fi
          echo "tag=${TAG}" >> "$GITHUB_OUTPUT"
          echo "TAG=${TAG}"

      - name: Setup Python
        uses: actions/setup-python@v5
        with: { python-version: '3.x' }

      - name: Build sdist & wheel
        run: |
          python -m pip install -U pip build
          python -m build

      - name: Verificar version == tag
        shell: bash
        run: |
          WANT="${{ steps.tag.outputs.tag#v }}"
          ACTUAL=$(python - <<'PY'
import re, pathlib
t=pathlib.Path("pyproject.toml").read_text()
print(re.search(r'(?m)^\s*version\s*=\s*"([0-9.]+)"', t).group(1))
PY
)
          echo "want=$WANT actual=$ACTUAL"
          test "$WANT" = "$ACTUAL"

      - name: Publicar en PyPI (OIDC)
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: true

      - name: Login GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & Push image
        shell: bash
        run: |
          REPO="${GITHUB_REPOSITORY,,}"
          TAG="${{ steps.tag.outputs.tag }}"
          docker buildx build --platform linux/amd64,linux/arm64 \
            -t ghcr.io/$REPO:$TAG \
            -t ghcr.io/$REPO:latest \
            --push .

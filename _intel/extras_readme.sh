#!/usr/bin/env bash

REPO_DIR="/home/user/Proyectos/diff-risk-dashboard"
cd "$REPO_DIR" || exit 1

BR="chore/extras-readme-governance-$(date +%Y%m%d%H%M%S)"
git switch -c "$BR" origin/main 2>/dev/null || git checkout -b "$BR"

# --- README completo (badges, uso, roadmap, sponsors) ---
cat > README.md <<'MD'
# üõ°Ô∏è Diff Risk Dashboard ‚Äî APV JSON ‚Üí Summary (CLI & Markdown)

Un **CLI** m√≠nimo y profesional para resumir salidas de **ai-patch-verifier (APV)**:  
cuenta findings por severidad, calcula el **worst**, expone un **nivel de riesgo** y puede renderizar **Markdown** listo para pegar en PRs.

<div align="center">

[![CI / build](https://github.com/CoderDeltaLAN/diff-risk-dashboard/actions/workflows/build.yml/badge.svg?branch=main)](https://github.com/CoderDeltaLAN/diff-risk-dashboard/actions/workflows/build.yml)
[![CodeQL Analysis](https://github.com/CoderDeltaLAN/diff-risk-dashboard/actions/workflows/codeql.yml/badge.svg?branch=main)](https://github.com/CoderDeltaLAN/diff-risk-dashboard/actions/workflows/codeql.yml)
[![Release](https://img.shields.io/github/v/release/CoderDeltaLAN/diff-risk-dashboard?display_name=tag)](https://github.com/CoderDeltaLAN/diff-risk-dashboard/releases)
![Python 3.11|3.12](https://img.shields.io/badge/Python-3.11%20|%203.12-3776AB?logo=python)
[![License: MIT](https://img.shields.io/badge/License-MIT-blue.svg)](LICENSE)
[![Donate](https://img.shields.io/badge/Donate-PayPal-0070ba?logo=paypal&logoColor=white)](https://www.paypal.com/donate/?hosted_button_id=YVENCBNCZWVPW)

</div>

---

## ‚ú® ¬øQu√© hace?

- Lee APV JSON (`predicted_risk` o `severity`), cuenta por severidad y **detecta el peor**.
- Devuelve **tabla**, **JSON** o **Markdown** (`--format {table,json,md}`).
- **Exit code** configurable por riesgo (gateo para CI).

---

## üöÄ Instalaci√≥n / Uso

### A) Dev local

```bash
python -m pip install --upgrade pip
pip install -e .
```

### B) Usuario final (pipx)

```bash
pipx install git+https://github.com/CoderDeltaLAN/diff-risk-dashboard@main
```

> Binarios expuestos: **`diff-risk`** (CLI) y **`diff-risk-web`** (visor web opcional).

---

## üß∞ CLI

```bash
# Ayuda
diff-risk -h

# JSON
diff-risk examples/sample_apv.json --format json --no-exit-by-risk

# Markdown a archivo
diff-risk examples/sample_apv.json --format md -o report.md --no-exit-by-risk

# Tabla (por defecto) + exit code por riesgo
diff-risk examples/sample_apv.json
```

Salida Markdown t√≠pica:

```md
# Diff Risk Dashboard üî¥ ‚Äî Worst: **HIGH**

| Severity | Count |
|---|---:|
| CRITICAL | 0 |
| HIGH | 1 |
| MEDIUM | 1 |
| LOW | 1 |
| INFO | 0 |
| **TOTAL** | **3** |

> Generated by diff-risk-dashboard CLI
```

---

## üåê Visor web opcional

```bash
python -m pip install "fastapi>=0.110" "uvicorn[standard]>=0.27"
diff-risk-web  # abre http://127.0.0.1:8000
```

---

## üóÇÔ∏è Estructura

```text
.
‚îú‚îÄ‚îÄ examples/                        # JSON de ejemplo
‚îú‚îÄ‚îÄ src/diff_risk_dashboard/         # core, cli, report, web
‚îú‚îÄ‚îÄ tests/                           # pytest
‚îî‚îÄ‚îÄ .github/workflows/               # build.yml, codeql.yml, release-publish.yml, etc.
```

---

## üîÑ CI/CD

- **Build** (3.11/3.12): ruff, black --check, pytest, mypy.
- **CodeQL** en PRs y `main`.
- **Release Drafter** + workflow `release (publish)` para publicar tags con notas.

---

## üó∫Ô∏è Roadmap (corto)

- **v0.2.x**: Cron de publicaci√≥n autom√°tica (Release Drafter).  
- **Gobernanza**: `SECURITY.md`, `CONTRIBUTING.md`, `CODEOWNERS`, templates de issues.  
- **Calidad**: cobertura en CI + `pre-commit` + agrupaci√≥n de Dependabot.

> Opcional: publicar en **PyPI/GHCR** y a√±adir badge.

---

## ü§ù Contribuir

- PRs peque√±os (Conventional Commits).
- CI local verde antes de abrir PR.
- Auto-merge cuando los checks pasan.

---

## üîê Seguridad

- Reportes via **GitHub Security Advisories** (no PoCs p√∫blicos).
- Respuesta inicial en 72h.

---

## üíö Donations & Sponsorship

Si este proyecto te ahorra tiempo, considera apoyar su mantenimiento. ¬°Gracias!
[![Donate](https://img.shields.io/badge/Donate-PayPal-0070ba?logo=paypal&logoColor=white)](https://www.paypal.com/donate/?hosted_button_id=YVENCBNCZWVPW)

---

## üìà SEO

diff risk dashboard, apv json, ai-patch-verifier summary, security risk gate,  
python cli for risk, markdown status report, codeql github actions, always green ci,  
ruff black pytest mypy, branch protection required checks, squash merge linear history

---

## üìÑ Licencia

**MIT**. Ver [LICENSE](LICENSE).
MD

# --- GOVERNANCE & SPONSORS ---
mkdir -p .github/ISSUE_TEMPLATE

cat > .github/FUNDING.yml <<'YML'
github: []
custom:
  - https://www.paypal.com/donate/\?hosted_button_id\=YVENCBNCZWVPW
YML

cat > SECURITY.md <<'MD'
# Security Policy

- Report vulnerabilities via **GitHub Security Advisories** or email.
- Do not open public issues with exploitable PoCs.
- Initial response within 72h.
MD

cat > CONTRIBUTING.md <<'MD'
# Contributing

1) PRs peque√±os con Conventional Commits.
2) CI local: `ruff`, `black --check`, `pytest`, `mypy`.
3) Activa auto-merge cuando los checks est√©n en verde.
MD

echo "* @CoderDeltaLAN" > CODEOWNERS

cat > .github/ISSUE_TEMPLATE/bug_report.yml <<'YML'
name: Bug report
description: Reportar un problema
labels: [bug]
body:
  - type: textarea
    attributes: { label: Descripci√≥n, placeholder: Qu√© ocurri√≥ y qu√© esperabas }
    validations: { required: true }
  - type: textarea
    attributes: { label: Repro, placeholder: Pasos, input, versi√≥n }
YML

cat > .github/ISSUE_TEMPLATE/feature_request.yml <<'YML'
name: Feature request
description: Solicitar mejora
labels: [enhancement]
body:
  - type: textarea
    attributes: { label: Propuesta, placeholder: ¬øQu√© y por qu√©? }
    validations: { required: true }
YML

# --- Auto-release semanal/manual con Release Drafter ---
mkdir -p .github/workflows
cat > .github/workflows/release-publish.yml <<'YML'
name: Release (publish)

on:
  workflow_dispatch:
  schedule:
    - cron: '0 9 * * 1' # Lunes 09:00 UTC

permissions:
  contents: write
  pull-requests: read

jobs:
  publish:
    if: ${{ github.repository == 'CoderDeltaLAN/diff-risk-dashboard' }}
    runs-on: ubuntu-latest
    steps:
      - uses: release-drafter/release-drafter@v6
        with:
          publish: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
YML

# --- Limpiar workflows hu√©rfanos (dependabot labels) ---
if ls .github/workflows 2>/dev/null | grep -Ei 'dependabot.*label|label.*dependabot' >/dev/null; then
  git rm -f .github/workflows/*dependabot*label*.yml 2>/dev/null || true
fi

# --- Commit & PR ---
git add -A
git commit -m "docs+gov: README (badges, sponsors, roadmap) + FUNDING + SECURITY + CONTRIBUTING + templates + release workflow" || true
git push -u origin "$BR"

REPO_SLUG="$(git config --get remote.origin.url | sed 's#.*github.com/##;s/.git$//')"
PR_URL="$(gh pr create -R "$REPO_SLUG" -B main -H "$BR" \
  -t "docs+gov: README, Sponsors, Roadmap, auto-release" \
  -b "README actualizado, gobierno del repo, issue templates y workflow de publicaci√≥n (Release Drafter).")"
echo "$PR_URL"

# --- Checks & merge (best-effort) ---
gh pr checks "$(basename "$PR_URL")" -R "$REPO_SLUG" --watch || true
gh pr merge  "$(basename "$PR_URL")" -R "$REPO_SLUG" --squash --delete-branch --auto \
  || gh pr merge "$(basename "$PR_URL")" -R "$REPO_SLUG" --squash --delete-branch --admin || true

# --- Dejar main espejo/verde ---
git fetch origin --prune
git switch main
git reset --hard origin/main
git clean -fdx

echo "=== √öltimos runs en main ==="
gh run list --repo "$REPO_SLUG" --limit 8 \
  --json workflowName,headBranch,conclusion,url \
  --jq '.[]|select(.headBranch=="main")|[.workflowName,.conclusion,.url]|@tsv'

from __future__ import annotations

from collections.abc import Mapping
from typing import Any

_SEVERITIES = ["CRITICAL", "HIGH", "MEDIUM", "LOW", "INFO"]


def _get_counts(summary: Mapping[str, Any]) -> dict[str, int]:
    counts: dict[str, int] = {}
    by = summary.get("by_severity", {}) or {}
    if isinstance(by, Mapping):
        for sev in _SEVERITIES:
            counts[sev] = int(by.get(sev, by.get(sev.lower(), 0)) or 0)
    return counts


def to_markdown(summary: Mapping[str, Any]) -> str:
    counts = _get_counts(summary)
    total = int(summary.get("total", 0) or 0)
    worst = str(summary.get("worst", "INFO") or "INFO").upper()
    risk = str(summary.get("risk", summary.get("risk_level", "green")) or "green").lower()
    emoji = {"red": "ğŸ”´", "yellow": "ğŸŸ¡", "green": "ğŸŸ¢"}.get(risk, "ğŸŸ¢")
    lines = [
        f"# Diff Risk Dashboard {emoji} â€” Worst: **{worst}**",
        "",
        "| Severity | Count |",
        "|---|---:|",
    ]
    for sev in _SEVERITIES:
        lines.append(f"| {sev} | {counts.get(sev,0)} |")
    lines.append(f"| **TOTAL** | **{total}** |")
    lines.append("")
    lines.append("> Generated by diff-risk-dashboard CLI")
    return "\n".join(lines)
